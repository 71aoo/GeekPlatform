<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.syclover.geekPlatform.dao.SolveMapper">

    <!-- 所有字段映射 -->
    <resultMap id="allColumnsMapper" type="com.syclover.geekPlatform.entity.Solve">
        <result column="id" property="id"/>
        <result column="token" property="token"/>
        <result column="flag" property="flag"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
        <association column="team_id" property="team"
                     javaType="com.syclover.geekPlatform.entity.Team"
                     select="com.syclover.geekPlatform.dao.TeamMapper.getTeamById"/>
        <association column="user_id" property="user"
                     javaType="com.syclover.geekPlatform.entity.User"
                     select="com.syclover.geekPlatform.dao.UserMapper.getUserById"/>
        <association column="challenge_id" property="challenge"
                     javaType="com.syclover.geekPlatform.entity.Challenge"
                     select="com.syclover.geekPlatform.dao.ChallengeMapper.getByID"/>

    </resultMap>

    <!-- 解决添加 -->
    <insert id="addSolve" parameterType="com.syclover.geekPlatform.entity.Solve">
        INSERT INTO
            Solves(
                team_id,
                token,
                challenge_id,
                user_id,
                flag
            )
        VALUES (
            #{team.id},
            #{token},
            #{challenge.id},
            #{user.id},
            #{flag}
        )
    </insert>


    <!-- 找某用户所有解答的题目按时间排序 -->
    <select id="getSolvedChallengesByUser" resultMap="allColumnsMapper">
        select
            Solves.*
        from
            Solves,
            Challenges,
            Users
        where
            Solves.user_id = Users.id and
            Solves.challenge_id = Challenges.id and
            Users.id = #{id}
        order by
            -Solves.created_time
    </select>

    <!-- 找出某队伍所有解答的题目按时间排序 -->
    <select id="getSolvedChallengesByTeam" resultMap="allColumnsMapper">
        select
            Solves.*
        from
            Solves,
            Challenges,
            Teams
        where
            Solves.team_id = Teams.id and
            Solves.challenge_id = Challenges.id and
            Teams.id = #{id}
        order by
            -Solves.created_time
    </select>

    <!-- 根据 Solve 表得出用户个人总分 -->
    <select id="getPointsByUser" resultType="INT">
        select
            sum(Challenges.score)
        from
            Solves,
            Challenges,
            Users
        where
            Solves.user_id = Users.id and
            Solves.challenge_id = Challenges.id and
            Users.id = #{id}
    </select>

    <!-- 根据 Solve 表得出队伍总分 -->
    <select id="getPointsByTeam" resultType="INT">
        select
            sum(Challenges.score)
        from
            Solves,
            Challenges,
            Teams
        where
            Solves.team_id = Teams.id and
            Solves.challenge_id = Challenges.id and
            Teams.id = #{id}
    </select>

    <!-- 是否已提交 -->
    <select id="isSolve" resultMap="allColumnsMapper">
        select
            *
        from
            Solves
        where
            team_id = #{teamID} and
            token = #{token} and
            challenge_id = #{challengeID}
    </select>

    <update id="updatedScore">
        update
            Users,
            Teams
        set
            Users.points = Users.points + (select score from Challenges where id = #{challengeID}),
            Teams.points = Teams.points + (select score from Challenges where id = #{challengeID}),
            Teams.last_points_time = DATE_FORMAT(NOW(),'%Y-%m-%d %H:%m:%s'),
            Users.last_points_time = DATE_FORMAT(NOW(),'%Y-%m-%d %H:%m:%s')
        where
            Teams.id = #{teamID} and
            Users.id = #{userID}
    </update>

</mapper>